{"version":3,"sources":["0__variables.js","1__fetch.js","2__renderFunctions.js","3__favFunctionality.js","4__searchFunctionality.js","main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA","file":"main.js","sourcesContent":["\"use strict\";\n\n//------------------------QUERYSELECTOR----------------------------------\n\nconst cardList = document.querySelector(\".js-cardList\");\nconst favCardList = document.querySelector(\".js-favList\");\nconst searchInput = document.querySelector(\".js-input\");\nconst searchBtn = document.querySelector(\".js-button\");\n\n//---------VARIABLES GLOBALES -> VARIABLES CON DATOS DE LA APP-----------\n\nlet characters = [];\nlet favCharacters = [];\n","\"use strict\";\n\nfetch(\"./assets/data/characters.json\", {\n  method: \"GET\",\n  headers: { \"Content-Type\": \"application/json\" },\n})\n  .then((response) => response.json())\n  .then((charactersData) => {\n    characters = charactersData;\n\n    renderAllCards(characters);\n  });\n\nconst savedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\n\nif (savedFavorites !== null) {\n  favCharacters = savedFavorites;\n  renderFavCharacters(savedFavorites);\n}\n","\"use strict\";\n\n//-------------------------------FUNCIONES-------------------------------\n\nfunction renderOneCard(oneCharacterCard, domElement) {\n  //DOM AVANZADO PARA PINTAR LAS TARJETAS\n\n  const cardsInFavListIndex = favCharacters.findIndex(\n    (eachCardObj) => eachCardObj.char_id === oneCharacterCard.char_id\n  );\n\n  let classFavorite = \"\";\n\n  if (cardsInFavListIndex === -1) {\n    classFavorite = \"\";\n  } else {\n    classFavorite = \"selected\";\n  }\n\n  const liElement = document.createElement(\"li\");\n  liElement.setAttribute(\"class\", \"listElement\");\n\n  const articleElement = document.createElement(\"article\");\n\n  articleElement.setAttribute(\n    \"class\",\n    `js-articleElement listElement__article ${classFavorite}`\n  );\n  articleElement.setAttribute(\"id\", `${oneCharacterCard.char_id}`);\n\n  const imageElement = document.createElement(\"img\");\n  imageElement.setAttribute(\"src\", `${oneCharacterCard.img}`);\n  imageElement.setAttribute(\"alt\", `${oneCharacterCard.name}`);\n  imageElement.setAttribute(\"class\", \"listElement__article--img\");\n\n  const nameElement = document.createElement(\"h3\");\n  const nameTextElement = document.createTextNode(`${oneCharacterCard.name}`);\n  nameElement.setAttribute(\"class\", \"listElement__article--name\");\n\n  const statusElement = document.createElement(\"p\");\n  const statusTextElement = document.createTextNode(\n    `${oneCharacterCard.status}`\n  );\n  statusElement.setAttribute(\"class\", \"listElement__article--status\");\n\n  nameElement.appendChild(nameTextElement);\n  statusElement.appendChild(statusTextElement);\n  articleElement.appendChild(imageElement);\n  articleElement.appendChild(nameElement);\n  articleElement.appendChild(statusElement);\n  liElement.appendChild(articleElement);\n\n  domElement.appendChild(liElement);\n}\n\nfunction renderAllCards(cards) {\n  //bucle para que se pinten cada una de las tarjetas de personaje\n  cardList.innerHTML = \"\";\n  for (const card of cards) {\n    renderOneCard(card, cardList);\n  }\n  addListListeners();\n}\n\nfunction renderFavCharacters(favCards) {\n  //bucle para que se pinten las tarjetas favoritas\n  favCardList.innerHTML = \"\"; //para que dejen de duplicarse las tarjetas de personajes\n  for (const favCard of favCards) {\n    renderOneCard(favCard, favCardList);\n  }\n}\n","\"use strict\";\nfunction addListListeners() {\n  //función para crear eventos sobre todos los elementos de la lista\n  const allCardElements = document.querySelectorAll(\".js-articleElement\");\n\n  for (const eachCardElements of allCardElements) {\n    eachCardElements.addEventListener(\"click\", handleClickFavCard);\n  }\n}\n\nfunction handleClickFavCard(event) {\n  //evento para seleccionar favoritos y que se guarden en el array y localStorage\n  const selectedCard = characters.find(\n    (eachCardObj) => eachCardObj.char_id === parseInt(event.currentTarget.id)\n  );\n\n  const cardsInFavListIndex = favCharacters.findIndex(\n    (eachCardObj) => eachCardObj.char_id === parseInt(event.currentTarget.id)\n  );\n\n  if (cardsInFavListIndex === -1) {\n    console.log(favCharacters);\n    favCharacters.push(selectedCard); //para guardarlo en el array si todavía no está en él, sin añadirlo más veces (en teoría, pero no me funciona, se siguen duplicando)\n\n    localStorage.setItem(\"favorites\", JSON.stringify(favCharacters));\n  } else {\n    //si ya está en favoritos\n\n    favCharacters.splice(cardsInFavListIndex, 1);\n\n    localStorage.setItem(\"favorites\", JSON.stringify(favCharacters));\n  }\n\n  renderFavCharacters(favCharacters);\n  renderAllCards(characters);\n  //se pintan duplicados pero lo arreglamos en el bucle\n}\n","\"use strict\";\n\nfunction handleClickSearchCard(event) {\n  //función para buscar los personajes por nombre y pintarlos\n  event.preventDefault();\n  const userSearch = searchInput.value;\n\n  const filteredCharacters = characters.filter((eachCharacter) =>\n    eachCharacter.name.toLowerCase().includes(userSearch)\n  );\n\n  renderAllCards(filteredCharacters);\n}\n\nsearchBtn.addEventListener(\"click\", handleClickSearchCard);\n",""]}